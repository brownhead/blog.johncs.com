<!DOCTYPE html>
<html>
<head>
    <title>John CS - Solving a wooden puzzle</title>

    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href='http://fonts.googleapis.com/css?family=Source+Code+Pro:300,400,600' rel='stylesheet' type='text/css'>

    <!-- inject:head:css -->
    <style>* {
  font-family: "Source Code Pro", serif;
  font-size: 14px;
  line-height: 20px;
  letter-spacing: 0;
}
html {
  -webkit-text-size-adjust: 100%;
}
body {
  background-color: #fdf6e3;
  color: #657b83;
  padding: 20px 2ch 200px 2ch;
}
@media (max-width: 46ch) {
  body {
    padding-bottom: 100px;
  }
}
a {
  text-decoration: none;
  color: #b58900;
}
a:hover {
  text-decoration: underline;
}
.single-column-content {
  max-width: 72ch;
  margin-left: auto;
  margin-right: auto;
}
.block-quote-markup {
  color: #859900;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
tt {
  font-weight: 300;
}
.nav-bar {
  background-color: #eee8d5;
  border-left: 1ch solid #268bd2;
  border-right: 1ch solid #268bd2;
  margin-bottom: 20px;
  padding: 0 1ch;
}
.nav-bar ul {
  padding: 0;
  margin: 0;
  list-style: none;
  display: inline;
}
.nav-bar ul li {
  display: inline;
}
.nav-bar ul li:after {
  content: ", ";
}
.nav-bar ul li:last-child:after {
  content: "";
}
.nav-bar a {
  color: #268bd2;
}
img {
  background-color: #eee8d5;
  border-color: #eee8d5;
  border-style: solid;
  border-width: 20px 2ch;
  box-sizing: border-box;
  display: block;
  margin-bottom: 20px;
  margin-left: auto;
  margin-right: auto;
  max-width: 60ch;
  width: 100%;
}
img.small-image {
  max-width: 40ch;
}
img.tiny-image {
  max-width: 30ch;
}
@media (min-width: 80ch) {
  .floating-head {
    float: left;
    margin-right: 2ch;
  }
}
p,
ol,
ul {
  margin: 0 0 20px 0;
}
.post-body ol,
.post-body ul {
  list-style: none;
  padding: 0;
}
.post-body ol > li {
  counter-increment: item;
  padding-left: 4ch;
  position: relative;
}
.post-body ol > li:before {
  color: #859900;
  content: counter(item) ".";
  display: inline-block;
  left: 0;
  padding: 0 1ch;
  position: absolute;
}
.post-body ul > li {
  padding-left: 3ch;
  position: relative;
}
.post-body ul > li:before {
  color: #859900;
  content: "*";
  display: inline-block;
  left: 0;
  padding: 0 1ch;
  position: absolute;
}
.post-body .red-bold {
  color: #DC322F;
}
.post-body .rounded-40 {
  border-radius: 40px;
}
.post-body table.footnote td {
  padding: 0;
  margin: 0;
}
.post-body table.footnote td.label {
  padding-right: 1ch;
}
.post-body tt,
.post-body pre {
  font-weight: 300;
}
.post-body tt b,
.post-body pre b,
.post-body tt strong,
.post-body pre strong {
  font-weight: normal;
}
.post-body pre {
  padding: 0 0 0 4ch;
  white-space: pre-wrap;
}
.post-body h2,
.post-body h3,
.post-body h4,
.post-body h5,
.post-body h6 {
  font-weight: 600;
}
.post-body h2 *,
.post-body h3 *,
.post-body h4 *,
.post-body h5 *,
.post-body h6 * {
  font-weight: 600;
}
.post-body em,
.post-body i {
  font-style: normal;
  font-weight: 600;
}
.top-bar {
  background-color: #eee8d5;
  margin-bottom: 20px;
}
.top-bar .post-date {
  font-weight: 300;
  color: #6c71c4;
}
.top-bar a {
  color: #268bd2;
}
</style>
    <!-- endinject -->
</head>
<body class="single-column-content">
    <header class="top-bar">
        <a href="/">John CS</a> &gt; <a href="../blog-index.htm">Blog</a> &gt; Solving a wooden puzzle <span class="post-date">[04/27/2015]</span>
    </header>
    <div class="post-body">
        <div class="document">
<p>Last week a mysterious double-sided puzzle appeared at <a class="reference external" href="https://www.khanacademy.org/">Khan Academy</a>.</p>
<a class="reference external image-reference" href="/images/mysterious-puzzle.jpg"><img alt="A picture of the mysterious puzzle" src="/images/mysterious-puzzle.jpg" /></a>
<p>To solve the puzzle you must fit all four pieces inside the recessed area (the pieces will not entirely fill the area). We found a solution to the easy side after only a few days <a class="footnote-reference" href="#easy-solution" id="id1">[1]</a> but nobody could get close to solving the hard side. So five of us began writing our own solvers.</p>
<p>The first question each of us faced was how to represent the positions of the pieces. We were able to lay down a triangular grid on top of each side, but how should the cells be addressed?</p>
<p>Each of us came up with our own answer to this question <a class="footnote-reference" href="#such-coordinates" id="id2">[2]</a>. I decided to use a coordinate system that used two perpendicular axes, with the origin at the bottom left.</p>
<img alt="The triangular grid" src="/images/triangular-grid.png" />
<a class="reference external image-reference" href="/images/johns-coordinates.png"><img alt="My coordinate system" src="/images/johns-coordinates.png" /></a>
<p>I had a problem though. Once I manually input a piece into my coordinate system, I needed to be able to rotate and reflect that piece into 12 different alignments. Reflection was easy, but despite my best efforts, I couldn't figure out how to rotate the pieces once they were placed into my grid.</p>
<p>After smashing my head against the problem for an hour and getting nowhere, I gave up <a class="footnote-reference" href="#emily-rotation" id="id3">[3]</a>. I instead decided to manually input each of the three rotations necessary for each piece (all the other alignments could be expressed as reflections of those rotations).</p>
<p>Now I just had to write the logic to try every possible placement of the pieces.</p>
<p>By this time, Ben Eater's solver was done and ticking away. <a class="reference external" href="https://www.khanacademy.org/computer-programming/spin-off-of-puzzle/4900481558249472">His solver</a> didn't do any pruning of the search space though (and took some time to check each placement), so he estimated that the solver would finish in around 2 years. I felt good about my chances of finding a solution before then.</p>
<img alt="Ben Eater's solver" class="small-image" src="/images/eaters-solver.gif" />
<p>To try and be a little faster I added in some logic to prune large parts of the search space where possible. This worked by laying down a piece at a time, and only trying the other ones if there were no collisions.</p>
<p>For example, first my program would lay down Piece A somewhere. If Piece A collided with a wall, my program would not try laying down Piece B yet, but would instead move Piece A somewhere else. Similarily, once it came time to lay down</p>
<p>This ended up working well and soon I had <a class="reference external" href="https://github.com/brownhead/damn-puzzle/blob/master/boom.js">a solver</a> that could brute force the puzzle in less than a minute.</p>
<img alt="My solver" class="small-image" src="/images/solver.gif" />
<p>Emily finished <a class="reference external" href="https://github.com/xymostech/wood-puzzle/blob/master/src/Main.hs">her solver</a> around the same time and we were able to confirm our results. <strong>The hard side of the puzzle was unsolvable</strong>.</p>
<p>Clearly there was a very evil puzzle master in our ranks.</p>
<img alt="An evil kitten" class="small-image" src="/images/evil-kitty.gif" />
<p><a class="reference external" href="http://jamie-wong.com/">Jamie Wong</a> readily admitted to bringing in the puzzle (though he didn't tell us where he got it). Despite the staggering proof to the contrary though, he was adamant that a solution existed. He said our solvers all shared a fatal flaw.</p>
<p>After a few hints, Emily and I did find the answer <a class="footnote-reference" href="#hard-solution" id="id4">[4]</a>. Which was good, because none of us had gotten any work done for a little while and we were starting to feel guilty.</p>
<table class="docutils footnote" frame="void" id="easy-solution" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id1">[1]</a></td><td>If you want to spoil it for yourself, here is <a class="reference external" href="/images/easy-solved.jpg">a picture of the solved easy side</a>.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="such-coordinates" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id2">[2]</a></td><td>Ben Eater decided to side-step the issue by drawing the shapes directly onto the screen. Cam Christensen came up with a coordinate system with two axes that formed a 60° angle and he convinced Emily Eisenberg to use the same system. Justin Helps used a screen-based coordinate system like Ben Eater, but tracked all three vertices of each triangle.</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="emily-rotation" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id3">[3]</a></td><td><a class="reference external" href="https://github.com/xymostech/wood-puzzle/blob/f7ea685855c06531debcc9e6105451c934a00cde/src/Main.hs#L35">Emily was actually able to figure out rotation</a> (though her coordinate system was different in that the axes formed a 60° angle).</td></tr>
</tbody>
</table>
<table class="docutils footnote" frame="void" id="hard-solution" rules="none">
<colgroup><col class="label" /><col /></colgroup>
<tbody valign="top">
<tr><td class="label"><a class="fn-backref" href="#id4">[4]</a></td><td>You don't really want me to give you the answer do you? That would be boring.</td></tr>
</tbody>
</table>
</div>

    </div>
    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-51104787-1', 'johncs.com');
        ga('send', 'pageview');
    </script>
</body>
</html>
