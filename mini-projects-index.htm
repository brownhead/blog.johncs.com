<!DOCTYPE html>
<html>
<head>
    <title>John CS - Mini Projects</title>

    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <meta name="description" content="A blog by John Christopher Sullivan">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <!-- inject:head:css -->
    <style>*{font-family:inherit;font-size:14px;letter-spacing:0;line-height:20px}html{-webkit-text-size-adjust:100%}body{background-color:#fdf6e3;color:#657b83;font-family:monospace;padding:20px 2ch 200px 2ch}@media (max-width:46ch){body{padding-bottom:100px}}body.fonts-loading{visibility:hidden}body.fonts-loaded{font-family:"Source Code Pro",monospace}a{text-decoration:none;color:#b58900}a:hover{text-decoration:underline}.single-column-content{max-width:72ch;margin-left:auto;margin-right:auto}.block-quote-markup{color:#859900}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.nav-bar{background-color:#eee8d5;border-left:1ch solid #268bd2;border-right:1ch solid #268bd2;margin-bottom:20px;padding:0 1ch}.nav-bar ul{padding:0;margin:0;list-style:none;display:inline}.nav-bar ul li{display:inline}.nav-bar ul li:after{content:", "}.nav-bar ul li:last-child:after{content:""}.nav-bar a{color:#268bd2}img{background-color:#eee8d5;border-color:#eee8d5;border-style:solid;border-width:20px 2ch;box-sizing:border-box;display:block;margin-bottom:20px;margin-left:auto;margin-right:auto;max-width:60ch;width:100%}img.small-image{max-width:40ch}img.tiny-image{max-width:30ch}@media (min-width:80ch){.floating-head{float:left;margin-right:2ch}}ol,p,ul{margin:0 0 20px 0}h2{font-weight:600;margin:0 0 20px 0}.page-info{margin-bottom:20px}.post{margin-bottom:20px}.post .post-heading{margin-bottom:20px;background-color:#eee8d5}.post .post-heading .post-date{font-weight:300;color:#6c71c4}.post .post-snippet-container{position:relative;overflow-y:hidden}.post .post-snippet-container .quote-gutter{word-wrap:break-word;color:#859900;width:1ch;position:absolute;user-select:none}.post .post-snippet-container .post-snippet{margin-left:2ch}.code{color:#586e75}.code .c{color:#93a1a1}.code .err{color:#586e75}.code .g{color:#586e75}.code .k{color:#859900}.code .l{color:#586e75}.code .n{color:#586e75}.code .o{color:#859900}.code .x{color:#cb4b16}.code .p{color:#586e75}.code .cm{color:#93a1a1}.code .cp{color:#859900}.code .c1{color:#93a1a1}.code .cs{color:#859900}.code .gd{color:#2aa198}.code .ge{color:#586e75;font-style:italic}.code .gr{color:#dc322f}.code .gh{color:#cb4b16}.code .gi{color:#859900}.code .go{color:#586e75}.code .gp{color:#586e75}.code .gs{color:#586e75;font-weight:700}.code .gu{color:#cb4b16}.code .gt{color:#586e75}.code .kc{color:#cb4b16}.code .kd{color:#268bd2}.code .kn{color:#859900}.code .kp{color:#859900}.code .kr{color:#268bd2}.code .kt{color:#dc322f}.code .ld{color:#586e75}.code .m{color:#2aa198}.code .s{color:#2aa198}.code .na{color:#586e75}.code .nb{color:#b58900}.code .nc{color:#268bd2}.code .no{color:#cb4b16}.code .nd{color:#268bd2}.code .ni{color:#cb4b16}.code .ne{color:#cb4b16}.code .nf{color:#268bd2}.code .nl{color:#586e75}.code .nn{color:#586e75}.code .nx{color:#586e75}.code .py{color:#586e75}.code .nt{color:#268bd2}.code .nv{color:#268bd2}.code .ow{color:#859900}.code .w{color:#586e75}.code .mf{color:#2aa198}.code .mh{color:#2aa198}.code .mi{color:#2aa198}.code .mo{color:#2aa198}.code .sb{color:#93a1a1}.code .sc{color:#2aa198}.code .sd{color:#586e75}.code .s2{color:#2aa198}.code .se{color:#cb4b16}.code .sh{color:#586e75}.code .si{color:#2aa198}.code .sx{color:#2aa198}.code .sr{color:#dc322f}.code .s1{color:#2aa198}.code .ss{color:#2aa198}.code .bp{color:#268bd2}.code .vc{color:#268bd2}.code .vg{color:#268bd2}.code .vi{color:#268bd2}.code .il{color:#2aa198}.post-body ol,.post-body ul{list-style:none;padding:0}.post-body ol>li{counter-increment:item;padding-left:4ch;position:relative}.post-body ol>li:before{color:#859900;content:counter(item) ".";display:inline-block;left:0;padding:0 1ch;position:absolute}.post-body ul>li{padding-left:3ch;position:relative}.post-body ul>li:before{color:#859900;content:"*";display:inline-block;left:0;padding:0 1ch;position:absolute}.post-body .red-bold{color:#dc322f}.post-body .rounded-40{border-radius:40px}.post-body table.footnote td{padding:0;margin:0}.post-body table.footnote td.label{padding-right:1ch}.post-body .literal{font-weight:300}.post-body pre{padding:0 0 0 4ch;white-space:pre-wrap}.post-body h2,.post-body h3,.post-body h4,.post-body h5,.post-body h6{font-weight:600;margin:0 0 20px 0}.post-body h2 *,.post-body h3 *,.post-body h4 *,.post-body h5 *,.post-body h6 *{font-weight:600}.post-body em,.post-body i{font-style:normal;font-weight:600}.soft{font-weight:300}.timestamp-anchor{color:#6c71c4}.literal-block{overflow-wrap:break-word}</style>
    <!-- endinject -->
</head>
<body class="single-column-content">
    <script>
        if (!(sessionStorage && sessionStorage.getItem &&
                sessionStorage.getItem("fontLoadingResult") === "fail")) {
            document.body.className += " fonts-loading"
        }
    </script>
    <nav class="nav-bar">
        <a href="/">John CS</a>:
        <ul>
            <li><a href="./blog-index.htm">Blog</a></li>
            <li>Mini Projects</li>
            <li><a href="http://johnsullivan.name">Portfolio</a></li>
            <li><a href="https://github.com/brownhead">GitHub</a></li>
            <li><a href="https://twitter.com/itsjohncs">Twitter</a></li>
        </ul>
    </nav>
    <div class="page-info">
        Sometimes I finish itty-bitty projects and put them here! These are the one-night projects; the beautiful i-just-thought-of-something-fun-to-make creations; the sorts of projects I used to make all the time when I was younger but now that I'm all mature and adulty I don't usually have time to complete.<br><br>If these are the sorts of projects that you like, follow along with me via <a href="https://twitter.com/itsjohncs">Twitter</a>. <span class="soft">(Psst... Check out <a href="http://johnsullivan.name">my portfolio</a> for less-mini projects)</span>
    </div>
    <h2><span aria-hidden="true">##</span> All Mini Projects</h2>
    <div class="all-posts">
        <article class="post">
            <div class="post-heading">
                <span>
                    <a href="https://github.com/brownhead/tbget" class="post-title">tbget</a>
                    <time class="post-date"><span aria-hidden="true">[<a class="timestamp-anchor" name="tbget" href="#tbget">08/04/2016</a>]</span><span class="sr-only">August 4, 2016</span></time>
                </span>
            </div>
            <div class="post-body">
                <div class="document">
<p>The log viewers we use at Khan Academy usually show tracebacks in some kind of escaped format (with newlines replaced with <tt class="docutils literal">\n</tt>, or the whole thing getting embedded into a large JSON object), so quickly formatting tracebacks has become a pastime for me.</p>
<p>Yesterday I got tired of formatting though, so now I have a fancy tool that can turn the most heinously encoded tracebacks into beautifully formatted emeralds.</p>
<p><em>Heinous:</em></p>
<pre class="code literal-block">
'{&quot;test_data&quot;: &quot;{\\&quot;data\\&quot;: \\&quot;$ tools/runtests.py
\\\\nRUNNING ALL SORTS OF TESTS\\\\nSTUFF IS
PASSING!!\\\\n^CTraceback (most recent call last):\\\\n
File \\\\\\&quot;tools/devshell.py\\\\\\&quot;, line 145, in
&lt;module&gt;\\\\n    from devshell_eval import *\\\\n  File \\
\\\\&quot;webapp/tools/devshell_eval.p
y\\\\\\&quot;, line 4, in &lt;module&gt;\\\\n    from
assessment_items.models import *\\\\n  File \\\\\\&quot;khan27/lib/python2.7/sre_parse.p
y\\\\\\&quot;, line 126, in __len__\\\\n    def
__len__(self):\\\\nKeyboardInterrupt\\\\n$\\\\n\\&quot;,
\\&quot;type\\&quot;: \\&quot;traceback\\&quot;}&quot;, &quot;test_result&quot;: &quot;aborted&quot;}'
</pre>
<p><em>Beautiful emerald:</em></p>
<pre class="code pytb literal-block">
<span class="gt">Traceback (most recent call last):
</span>  File <span class="nb">&quot;tools/devshell.py&quot;</span>, line <span class="m">145</span>, in <span class="n">&lt;module&gt;</span>
    <span class="kn">from</span> <span class="nn">devshell_eval</span> <span class="kn">import</span> <span>*</span>
  File <span class="nb">&quot;webapp/tools/devshell_eval.py&quot;</span>, line <span class="m">4</span>, in <span class="n">&lt;module&gt;</span>
    <span class="kn">from</span> <span class="nn">assessment_items.models</span> <span class="kn">import</span> <span>*</span>
  File <span class="nb">&quot;khan27/lib/python2.7/sre_parse.py&quot;</span>, line <span class="m">126</span>, in <span class="n">__len__</span>
    <span class="k">def</span> <span class="nf">__len__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
<span class="gr">KeyboardInterrupt\\\\n$\\\\n\\&quot;,
\\&quot;type\\&quot;</span>: <span class="n">\\&quot;traceback\\&quot;}&quot;, &quot;test_result&quot;: &quot;aborted&quot;}'</span>
</pre>
</div>

            </div>
        </article>
        <article class="post">
            <div class="post-heading">
                <span>
                    <a href="https://github.com/brownhead/simple-frontmatter" class="post-title">Simple Frontmatter Parser</a>
                    <time class="post-date"><span aria-hidden="true">[<a class="timestamp-anchor" name="simple-frontmatter" href="#simple-frontmatter">08/03/2015</a>]</span><span class="sr-only">August 3, 2015</span></time>
                </span>
            </div>
            <div class="post-body">
                <div class="document">
<p>I wonder how many people have implemented a simple frontmatter parser... Judging by the volume of static site generators out there I bet there's a bunch.</p>
<p>I made one for <a class="reference external" href="https://github.com/brownhead/phial">Phial</a> that was totally over-engineered awhile ago, but then for the <a class="reference external" href="http://engineering.khanacademy.org">KA Engineering blog</a> and <a class="reference external" href="http://johncs.com">this site</a> I went with a simpler version. I doubt it'd be useful, but just in case I figured I should release it under the UNLICENSE.</p>
<p>Here's a document that the parser could handle:</p>
<pre class="code literal-block">
# post.rst
title: The best post ever
author: John
...

This really is the best post ever
=================================

I assure you.
</pre>
<p>And here's some code that uses the parser:</p>
<pre class="code pycon literal-block">
<span class="kn"></span><span class="gp">&gt;&gt;&gt; </span><span class="kn">import</span> <span class="nn">simple_frontmatter</span>
<span class="gp">&gt;&gt;&gt; </span><span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;post.rst&quot;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
<span class="gp">... </span>    <span class="n">frontmatter</span><span class="p">,</span> <span class="n">contents</span> <span>=</span> <span class="n">simple_frontmatter</span><span>.</span><span class="n">load</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>
<span class="gp">...</span>
<span class="gp">&gt;&gt;&gt; </span><span class="n">frontmatter</span>
<span class="go">{'title': 'The best post ever', 'author': 'John'}
</span><span class="n"></span><span class="gp">&gt;&gt;&gt; </span><span class="n">contents</span>
<span class="go">'\nThis really is the best post ever\n=================================\n\nI assure you.\n'</span>
</pre>
</div>

            </div>
        </article>
        <article class="post">
            <div class="post-heading">
                <span>
                    <a href="https://github.com/brownhead/die-sim" class="post-title">Die Simulator</a>
                    <time class="post-date"><span aria-hidden="true">[<a class="timestamp-anchor" name="die-sim" href="#die-sim">05/22/2015</a>]</span><span class="sr-only">May 22, 2015</span></time>
                </span>
            </div>
            <div class="post-body">
                <div class="document">
<p>Ever play D&amp;D, realize you forgot your dice, and decide to write up a script to roll dice for you? Me too! I made it in Python and didn't spend a ton of time adding features, so its understanding of dice-rolling syntax (like <tt class="docutils literal">2d10+8</tt>) is pretty minimal, but it works great!</p>
<a class="reference external image-reference" href="https://raw.githubusercontent.com/brownhead/die-sim/master/demo.gif"><img alt="A demo of the die simulator" src="https://raw.githubusercontent.com/brownhead/die-sim/master/demo.gif" /></a>
<p>My initial version of this program had an off by one error which prevented me from ever getting a 20 when rolling a d20! I was upset.</p>
</div>

            </div>
        </article>
        <article class="post">
            <div class="post-heading">
                <span>
                    <a href="https://github.com/brownhead/different-logger" class="post-title">Different Logger</a>
                    <time class="post-date"><span aria-hidden="true">[<a class="timestamp-anchor" name="different-logger" href="#different-logger">08/13/2014</a>]</span><span class="sr-only">August 13, 2014</span></time>
                </span>
            </div>
            <div class="post-body">
                <div class="document">
<p>I wanted Python's logging library to give me pretty output and highlight the substituted values. So I made a little library that'd make it do all those things! Here's some output:</p>
<a class="reference external image-reference" href="/images/different-logger-messages.png"><img alt="Various log messages printed by the logger." src="/images/different-logger-messages.png" /></a>
<a class="reference external image-reference" href="/images/different-logger-exception.png"><img alt="A log message with a stack trace printed by the logger." src="/images/different-logger-exception.png" /></a>
<p>You don't need to do anything special to use it, just use the Python <tt class="docutils literal">logging</tt> library like normal (ex: <tt class="docutils literal"><span class="pre">logging.error(&quot;%s</span> foobars received, expected 17&quot;, num_foobars)</tt>).</p>
</div>

            </div>
        </article>
    </div>
    <link href='http://fonts.googleapis.com/css?family=Source+Code+Pro:300,400,600' rel='stylesheet' type='text/css'>
    <!-- inject:body-end:javascript -->
    <script>// Promise Polyfill
(function(){'use strict';var f,g=[];function l(a){g.push(a);1==g.length&&f()}function m(){for(;g.length;)g[0](),g.shift()}f=function(){setTimeout(m)};function n(a){this.a=p;this.b=void 0;this.f=[];var b=this;try{a(function(a){q(b,a)},function(a){r(b,a)})}catch(c){r(b,c)}}var p=2;function t(a){return new n(function(b,c){c(a)})}function u(a){return new n(function(b){b(a)})}function q(a,b){if(a.a==p){if(b==a)throw new TypeError;var c=!1;try{var d=b&&b.then;if(null!=b&&"object"==typeof b&&"function"==typeof d){d.call(b,function(b){c||q(a,b);c=!0},function(b){c||r(a,b);c=!0});return}}catch(e){c||r(a,e);return}a.a=0;a.b=b;v(a)}}
function r(a,b){if(a.a==p){if(b==a)throw new TypeError;a.a=1;a.b=b;v(a)}}function v(a){l(function(){if(a.a!=p)for(;a.f.length;){var b=a.f.shift(),c=b[0],d=b[1],e=b[2],b=b[3];try{0==a.a?"function"==typeof c?e(c.call(void 0,a.b)):e(a.b):1==a.a&&("function"==typeof d?e(d.call(void 0,a.b)):b(a.b))}catch(h){b(h)}}})}n.prototype.g=function(a){return this.c(void 0,a)};n.prototype.c=function(a,b){var c=this;return new n(function(d,e){c.f.push([a,b,d,e]);v(c)})};
function w(a){return new n(function(b,c){function d(c){return function(d){h[c]=d;e+=1;e==a.length&&b(h)}}var e=0,h=[];0==a.length&&b(h);for(var k=0;k<a.length;k+=1)u(a[k]).c(d(k),c)})}function x(a){return new n(function(b,c){for(var d=0;d<a.length;d+=1)u(a[d]).c(b,c)})};window.Promise||(window.Promise=n,window.Promise.resolve=u,window.Promise.reject=t,window.Promise.race=x,window.Promise.all=w,window.Promise.prototype.then=n.prototype.c,window.Promise.prototype["catch"]=n.prototype.g);}());

// Font Face Observer https://github.com/bramstein/fontfaceobserver
(function(){function l(a,b){document.addEventListener?a.addEventListener("scroll",b,!1):a.attachEvent("scroll",b)}function m(a){document.body?a():document.addEventListener?document.addEventListener("DOMContentLoaded",function c(){document.removeEventListener("DOMContentLoaded",c);a()}):document.attachEvent("onreadystatechange",function k(){if("interactive"==document.readyState||"complete"==document.readyState)document.detachEvent("onreadystatechange",k),a()})};function q(a){this.a=document.createElement("div");this.a.setAttribute("aria-hidden","true");this.a.appendChild(document.createTextNode(a));this.b=document.createElement("span");this.c=document.createElement("span");this.h=document.createElement("span");this.f=document.createElement("span");this.g=-1;this.b.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.c.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";
this.f.style.cssText="max-width:none;display:inline-block;position:absolute;height:100%;width:100%;overflow:scroll;font-size:16px;";this.h.style.cssText="display:inline-block;width:200%;height:200%;font-size:16px;max-width:none;";this.b.appendChild(this.h);this.c.appendChild(this.f);this.a.appendChild(this.b);this.a.appendChild(this.c)}
function w(a,b){a.a.style.cssText="max-width:none;min-width:20px;min-height:20px;display:inline-block;overflow:hidden;position:absolute;width:auto;margin:0;padding:0;top:-999px;left:-999px;white-space:nowrap;font:"+b+";"}function x(a){var b=a.a.offsetWidth,c=b+100;a.f.style.width=c+"px";a.c.scrollLeft=c;a.b.scrollLeft=a.b.scrollWidth+100;return a.g!==b?(a.g=b,!0):!1}function z(a,b){function c(){var a=k;x(a)&&null!==a.a.parentNode&&b(a.g)}var k=a;l(a.b,c);l(a.c,c);x(a)};function A(a,b){var c=b||{};this.family=a;this.style=c.style||"normal";this.weight=c.weight||"normal";this.stretch=c.stretch||"normal"}var B=null,C=null,D=null;function H(){if(null===C){var a=document.createElement("div");try{a.style.font="condensed 100px sans-serif"}catch(b){}C=""!==a.style.font}return C}function I(a,b){return[a.style,a.weight,H()?a.stretch:"","100px",b].join(" ")}
A.prototype.load=function(a,b){var c=this,k=a||"BESbswy",y=b||3E3,E=(new Date).getTime();return new Promise(function(a,b){null===D&&(D=!!window.FontFace);if(D){var J=new Promise(function(a,b){function e(){(new Date).getTime()-E>=y?b():document.fonts.load(I(c,c.family),k).then(function(c){1<=c.length?a():setTimeout(e,25)},function(){b()})}e()}),K=new Promise(function(a,c){setTimeout(c,y)});Promise.race([K,J]).then(function(){a(c)},function(){b(c)})}else m(function(){function r(){var b;if(b=-1!=f&&
-1!=g||-1!=f&&-1!=h||-1!=g&&-1!=h)(b=f!=g&&f!=h&&g!=h)||(null===B&&(b=/AppleWebKit\/([0-9]+)(?:\.([0-9]+))/.exec(window.navigator.userAgent),B=!!b&&(536>parseInt(b[1],10)||536===parseInt(b[1],10)&&11>=parseInt(b[2],10))),b=B&&(f==t&&g==t&&h==t||f==u&&g==u&&h==u||f==v&&g==v&&h==v)),b=!b;b&&(null!==d.parentNode&&d.parentNode.removeChild(d),clearTimeout(G),a(c))}function F(){if((new Date).getTime()-E>=y)null!==d.parentNode&&d.parentNode.removeChild(d),b(c);else{var a=document.hidden;if(!0===a||void 0===
a)f=e.a.offsetWidth,g=n.a.offsetWidth,h=p.a.offsetWidth,r();G=setTimeout(F,50)}}var e=new q(k),n=new q(k),p=new q(k),f=-1,g=-1,h=-1,t=-1,u=-1,v=-1,d=document.createElement("div"),G=0;d.dir="ltr";w(e,I(c,"sans-serif"));w(n,I(c,"serif"));w(p,I(c,"monospace"));d.appendChild(e.a);d.appendChild(n.a);d.appendChild(p.a);document.body.appendChild(d);t=e.a.offsetWidth;u=n.a.offsetWidth;v=p.a.offsetWidth;F();z(e,function(a){f=a;r()});w(e,I(c,'"'+c.family+'",sans-serif'));z(n,function(a){g=a;r()});w(n,I(c,'"'+
c.family+'",serif'));z(p,function(a){h=a;r()});w(p,I(c,'"'+c.family+'",monospace'))})})};"undefined"!==typeof module?module.exports=A:(window.FontFaceObserver=A,window.FontFaceObserver.prototype.load=A.prototype.load);}());

// Use that observer to enable the web fonts once they're loaded
var fonts = [
    (new FontFaceObserver("Source Code Pro", {weight: 300})).load(),
    (new FontFaceObserver("Source Code Pro", {weight: 400})).load(),
    (new FontFaceObserver("Source Code Pro", {weight: 600})).load(),
];

Promise.all(fonts).then(function() {
    document.body.className = document.body.className.replace(/fonts-loading/, "fonts-loaded");
}, function() {
	document.body.className = document.body.className.replace(/fonts-loading/, "");

	if (sessionStorage && sessionStorage.setItem) {
		sessionStorage.setItem("fontLoadingResult", "fail");
	}
});

(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-51104787-4', 'johncs.com');
ga('send', 'pageview');
</script>
    <!-- endinject -->
</body>
</html>
